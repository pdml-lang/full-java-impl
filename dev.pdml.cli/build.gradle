plugins {
    id 'application'

    // Asciidoctor; used to generate HTML doc files with picocli
    id 'org.asciidoctor.jvm.convert' version '3.1.0'
}

version = '0.8.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'

    implementation project ( ':dev.pp.text' )
    implementation project ( ':dev.pp.datatype' )
    implementation project ( ':dev.pp.parameters' )
    implementation project ( ':dev.pdml.core' )
    implementation project ( ':dev.pdml.ext' )

    // Picocli
    implementation 'info.picocli:picocli:4.6.1'
    // optional; see https://picocli.info/#_annotation_processor
    annotationProcessor 'info.picocli:picocli-codegen:4.6.1'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

test {
    useJUnitPlatform()
    // true by default
    enableAssertions = true
}



/*
tasks.withType<com.github.spotbugs.SpotBugsTask> {
}
spotbugs {
    toolVersion = "4.7.1"
}

project.extensions.extraProperties.set('SpotBugsTask', com.github.spotbugs.SpotBugsTask)
spotbugsMain {
}
// spotbugsMain {
tasks.withType<SpotbugsMain> {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}
*/

/*
task createStartScripts ( type: CreateStartScripts ) {
    applicationName = 'pxml'
    outputDir = file('build/scripts')
    // mainClass = 'org.gradle.test.Main'
    // classpath = files('path/to/some.jar')
}
*/

startScripts {
    applicationName = 'pdml'
    defaultJvmOpts = ['-ea']
    // outputDir = file('build/scripts')
    // mainClass = 'org.gradle.test.Main'
    // classpath = files('path/to/some.jar')
}

// Picocli
compileJava {
    // generates error (2021-05-26)
    // options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

application {
//    mainClass = 'dev.pxml.core.PXMLConverter'
    mainClass = 'dev.pdml.cli.Start'
    // enable assertions
    applicationDefaultJvmArgs = ['-ea']
}


// Picocli: generate man page as AsciiDoc files

mainClassName = 'dev.pdml.cli.Start'

/* error with Gradle 7
task generateManpageAsciiDoc ( type: JavaExec ) {
    dependsOn ( classes )
    group = "Documentation"
    description = "Generate AsciiDoc manpage"

    // error with Gradle 7
    classpath ( configurations.compile, configurations.annotationProcessor, sourceSets.main.runtimeClasspath )
    
    main 'picocli.codegen.docgen.manpage.ManPageGenerator'
    args mainClassName, "--outdir=${project.buildDir}/generated-picocli-docs", "-v" //, "--template-dir=src/docs/mantemplates"
}
*/

// Picocli: convert AsciiDoc to HTML

// apply plugin: 'org.asciidoctor.jvm.convert'

/* error because task generateManpageAsciiDoc commented (because error with Gradle 7)
asciidoctor {
    dependsOn ( generateManpageAsciiDoc )
    sourceDir = file("${project.buildDir}/generated-picocli-docs")
    outputDir = file("${project.buildDir}/docs")
    logDocuments = true
    outputOptions {
        // backends = ['manpage', 'html5']
        backends = ['html5']
    }
}
*/
